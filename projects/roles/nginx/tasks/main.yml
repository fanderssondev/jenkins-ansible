---
- name: Include OS specific variables
  ansible.builtin.include_vars:
    file: "{{ ansible_os_family | lower }}.yml"

- name: Install needed packages
  when: ansible_distribution
  ansible.builtin.package:
    name: "{{ nginx_packages }}"

- name: Include tasks for Redhat distros
  when: ansible_os_family == 'RedHat'
  ansible.builtin.include_tasks: redhat.yml

# - name: Include tasks for Debian distros
#   when: ansible_os_family == 'Debian'
#   ansible.builtin.include_tasks: debian.yml

- name: Create logs directories and files
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: "{{ item.state }}"
    recurse: "{{ item.recurse | default(omit) }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0755') }}"
    modification_time: "{{ item.modification_time | default(omit) }}"
    access_time: "{{ item.access_time | default(omit) }}"
  loop: "{{ nginx_dirs }}"
  notify:
    - restart_nginx

- name: Copy Nginx configuration
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
  loop: "{{ nginx_files }}"
  notify:
    - restart_nginx

- name: Add a user to a password file and ensure permissions are set
  community.general.htpasswd:
    path: "{{ item.path }}"
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode | default('0660') }}"
  loop: "{{ nginx_auth }}"
  no_log: true
  notify:
    - restart_nginx

- name: Copy templates
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode | default('0755') }}"
  loop: "{{ nginx_templates }}"
  notify:
    - restart_nginx
